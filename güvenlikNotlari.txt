1) CleanUp Function
2) Login vb. public sayfalarda mutlaka captcha olmalı ( brute force ataklarına karşı )
3) Form kütüphaneleri kullanılmalı ( formik, react hook form) Validationların detaylı yazılabilmesi için ekstra şema kütüphaneleri kullanılmalı ( YUP )
4) XSS saldırılarına karşı https://www.npmjs.com/package/dompurify
5) Content Security Policy ( Javascript, CSS, resim )
Temel CSP Yönergeleri ( nginx ve IIS üzerinden de yönetilebilir )
* default-src: Tüm kaynak türleri için varsayılan kaynakları belirtir
* script-src: Javascript dosyaları için hangi kaynaklardan gelecekler
* style-src: CSS stillerinin hangi kaynaklardan geleceğini
* img-src: Imagelerin hangi kaynaktan geleceğini
* connect-src WebSocket gibi ağ bağlantılarının yapılacağı kaynak
6) Clickjacking Saldırısı: Kullanıcıyı yanıltarak bir sayfa içerisinde görünmez bir button vb. elementle işlem yapmaya zorlaması.
7) ratelimiter ve slowdown ( sunucuya da koyabiliriz. nginx, iis vb.) https://www.npmjs.com/package/express-slow-down

8) Dosya Yükleme
* Dosya Tipi Kontrolü
* Dosya Boyutu Kontrolü
* Dosya yükleme işlemlerinde HTTPS kullanılması
* Dosya yükleme işlemine özel rate limiter
* API tarafında dosya adının benzersiz bir dosya adı veya GUID ile adlandırılması.
* Yüklenilen dosyanın çeşitli anti-virüs programlarıyla taranması. Meta vb. verileri, gizli içeriklerin temizlenmesi.
* Mime type kontrolünün yapılması
* Dosya yükleme loglarının tutulması
* File Storage Location ( dosyayı yüklediğimiz alandaki izinler. execute ve readonly izni KAPALI OLMALI! )
https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html

9) Paket Yönetimi
Bir paketin güvenli olduğunu nasıl anlarız?
* İndirilme sayısı
* Star sayısı
* Issues bölümü (açılan issuelara cevap verilmiş mi?)
* npm audit ile güvenlik açığı kontrolü
NPM AUDIT
package.lock.js dosyasındaki tüm bağımlılıkları tarar ve güvenlik açıklarını, uyarılarını kontrol eder.
- Low, moderate, high, critical
- güvenlik açığının türü,
Github security alert aktif hale getirilmesi. Dependabot alerts sayesinde haftalık güvenlik paket analizi tarafımıza verilir.
https://snyk.io/ ile paket analizi

10) Env Yönetimi
https://www.npmjs.com/package/cross-env
cross-env veya benzer bir paketle env yönetimi dev, prod, test vb. ortamlar için özelleştirilebilir.

11) CORS Policy
CORS tarayıcı tabanlı bir güvenlik katmanıdır.
Origin, Methods, Headers


12) production ortamında console loglarının temizlenmesi
https://www.npmjs.com/package/babel-plugin-transform-remove-console
